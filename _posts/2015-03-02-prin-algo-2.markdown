---

layout: post

title: "Princeton ALgorithm Week 2"

categories: jekyll update 

---

## Stack

#### Link-List Implementation
`Java Object Space`


#### Array Implementation

##### Size

Resizing-array implementation

	if full add 1 ~ N^2

	if full: double the array;
	if one-quarter full: half the array

If push N item in the resizing-array stack, it will call LogN times resize().


## Queue

Much similar with `Stack`

##### Item - Generics

###### Attempt 1: Casting

	StackofObjects stack;
	stack.push(new Apple());
	stack.push(new Pear());
	a = (Apple) stack.pop();

###### Attempt 2: Generics

	public class Stack<Item> {
	}

But Java does not allow creation of array:

	s = (Item[]) new Object[capacity];
	// the ugly cast

And the casting aims at Objects, so the primitive data types are wrapped, like `int` to `Integer`.

## Iterator

### Interface

这里首先理解一下Interface。Java的每个class都需要与client进行交互，即需要实现Interface。而在Java中设置了Interface的机制，它相当于一个class，只不过仅包含一系列函数。从直观上来讲，他们就是一系列交互界面。

比如有一个Interface：
	
	interface Bicycle {
    //  wheel revolutions per minute
    void changeCadence(int newValue);

    void changeGear(int newValue);

    void speedUp(int increment);

    void applyBrakes(int decrement);
	}

有一个类可以实现Bicycle的一些列Interface

	class ACMEBicycle implements Bicycle {

	    int cadence = 0;
	    int speed = 0;
	    int gear = 1;
	    
	    // The compiler will now require that method
	    // changeCadence, changeGear, speedUp, and 
	    // all be implemented. Compilation will fail if 
	    // methods are missing from this class.
	
	    public void changeCadence(int newValue) {
	         cadence = newValue;
	    }
	
	    public void changeGear(int newValue) {
	         gear = newValue;
	    }
	
	    public void speedUp(int increment) {
	         speed = speed + increment;   
	    }
	
	    public void applyBrakes(int decrement) {
	         speed = speed - decrement;
	    }
	
	    public void printStates() {
	         System.out.println("cadence:" +
	             cadence + " speed:" + 
	             speed + " gear:" + gear);
	    }
	}

这里我在TryInterface.java实现Interface的时候，发现ACMEBicycle里面函数不加public的话，会报错。通过搜索，我发现：`All abstract, default, and static methods in an interface are implicitly public, so you can omit the public modifier.`所以在Implements Interface的时候需要Explicitly加上public。

### Iterator

下面说明如何实现一个Iterator。它与interface紧密联系，我们直观地想，对于一个数据结果，我们想要遍历查询其中的元素。

#### Iterable
Iterable只包含一个返回一个Iterator的函数。
#### Iterator
Iterator包含hasNext, next, remove三个函数。

所以一个class如果想要Iterable，那么需要首先`Implements Iterable`，然后实现一个`SampleIterator implements Iterator`

	import java.util.Iterator;
	
	public class TryIterator implements Iterable<Integer> {
	    public Iterator<Integer> iterator() {
	        return new SampleIterator();
	    }

	    public class SampleIterator implements Iterator<Integer>{
	        public boolean hasNext() {
	            return false;
	        }
	
	        public Integer next() {
	            return 1;
	        }
	
	        public void remove() {
	
	        }
	    }
	}